"use strict";(self.webpackChunkcdi_website_api_docs=self.webpackChunkcdi_website_api_docs||[]).push([[128],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,k=m["".concat(p,".").concat(d)]||m[d]||c[d]||l;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8495:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},assets:function(){return u},toc:function(){return c},default:function(){return d}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],o={slug:"/",sidebar_position:1},p="Introduction",s={unversionedId:"introduction",id:"introduction",title:"Introduction",description:"Let's learn how to setup cdi-website-site development up to deployment.",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/",permalink:"/cdi-api-documentation/",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Authentication",permalink:"/cdi-api-documentation/authentication"}},u={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Getting started",id:"getting-started",level:2},{value:"Testing and Developing Locally",id:"testing-and-developing-locally",level:2}],m={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"introduction"},"Introduction"),(0,l.kt)("p",null,"Let's learn how to setup cdi-website-site development up to deployment."),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Follow the official AWS User Guide and Developer Guide for installation of the following:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"AWS CLI",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2.html"},"User Guide")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/aws/aws-cli"},"Repository")))),(0,l.kt)("li",{parentName:"ul"},"AWS Serverless Application Model CLI (AWS SAM CLI)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html"},"Developer Guide")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/aws/aws-sam-cli"},"Repository"))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Ensure that the user deploying the app has the following privileges:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Compute",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Lambda"))),(0,l.kt)("li",{parentName:"ul"},"Storage",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"S3"))),(0,l.kt)("li",{parentName:"ul"},"Database",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"DynamoDB"))),(0,l.kt)("li",{parentName:"ul"},"Networking and Content Delivery",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"API Gateway"))),(0,l.kt)("li",{parentName:"ul"},"Management and Governance",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Cloudwatch"),(0,l.kt)("li",{parentName:"ul"},"CloudFormation"))),(0,l.kt)("li",{parentName:"ul"},"Security, Identity, and Compliance",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Cognito")))),(0,l.kt)("h2",{id:"getting-started"},"Getting started"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Clone the repository")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/cdi-development/cdi-website-api\ncd cdi-website-api\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Setup AWS Credentials:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"nano ~/.aws/credentials\n")),(0,l.kt)("p",null,"Input your AWS credentials in the file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-toml"},"[default]\naws_access_key_id = AKIA...\naws_secret_access_key = Hcg...\n")),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"Setup infrastracture (Cognito, S3, and DynamoDB):")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cd infra\nsam deploy --guided\n")),(0,l.kt)("p",null,"Supply the required parameters:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"AppName"),(0,l.kt)("li",{parentName:"ul"},"SuperAdminEmail")),(0,l.kt)("p",null,"After successful deployment, confirm the Cognito super admin user."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"aws cognito-idp admin-set-user-password \\\n  --user-pool-id <USER_POOL_ID> \\\n  --username <ADMIN_USERNAME> \\\n  --password <ADMIN_PASSWORD> \\\n  --permanent\n")),(0,l.kt)("p",null,"(Optional) Protect the created infra stack from deletion."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"aws cloudformation update-termination-protection \\\n  --stack-name <STACK_NAME> \\\n  --enable-termination-protection\n")),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},"Install dependencies for API")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cd src/layer/nodejs\nnpm install\n")),(0,l.kt)("ol",{start:5},(0,l.kt)("li",{parentName:"ol"},"Setup infrastracture for the API")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"cd src\nsam deploy --guided\n")),(0,l.kt)("p",null,"Supply the required parameters:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"AppName"),(0,l.kt)("li",{parentName:"ul"},"LambdaMemorySize")),(0,l.kt)("p",null,"(Optional) Protect the created infra stack from deletion."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"aws cloudformation update-termination-protection \\\n  --stack-name <STACK_NAME> \\\n  --enable-termination-protection\n")),(0,l.kt)("h2",{id:"testing-and-developing-locally"},"Testing and Developing Locally"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Create own ",(0,l.kt)("inlineCode",{parentName:"li"},"env.json")," file with the following format:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Parameters": {\n    "KEY": "VALUE",\n    ...\n  }\n}\n')),(0,l.kt)("p",null,"This is to ensure that we have the same environment variables as we have in the deployed version."),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Start local server with the following:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"cd src\nsam local start-api --env-vars env.json\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Note: Multipart/Form-data cannot be processed in locally, resulting to ")," ",(0,l.kt)("inlineCode",{parentName:"p"},"Error 502: Internal Server Error")," ",(0,l.kt)("em",{parentName:"p"}," this seems to be a problem with S3 bucket when accessing locally.")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Base URL: ",(0,l.kt)("a",{parentName:"li",href:"https://ybs46id484.execute-api.ap-southeast-1.amazonaws.com"},"https://ybs46id484.execute-api.ap-southeast-1.amazonaws.com"))))}d.isMDXComponent=!0}}]);